{
  "name": "AHD",
  "description": "AHD",
  "url": "https://awesome-hd.me/",
  "icon": "https://awesome-hd.me/favicon.ico",
  "tags": ["影视"],
  "schema": "Gazelle",
  "host": "awesome-hd.me",
  "searchEntryConfig": {
    "page": "/torrents.php",
    "resultType": "html",
    "parseScriptFile": "getSearchResult.js",
    "queryString": "searchstr=$key$",
    "area": [{
      "name": "IMDB",
      "keyAutoMatch": "^(tt\\d+)$",
      "queryString": "id=$key$"
    }]
  },
  "searchEntry": [{
    "name": "all",
    "enabled": true
  }],
  "torrentTagSelectors": [{
    "name": "Free",
    "selector": "strong:contains('100% Freeleech')",
    "color": "blue"
  }, {
    "name": "25%",
    "selector": "strong:contains('25% Freeleech')",
    "color": "indigo"
  }, {
    "name": "50%",
    "selector": "strong:contains('50% Freeleech')",
    "color": "orange"
  }, {
    "name": "75%",
    "selector": "strong:contains('75% Freeleech')",
    "color": "lime"
  }],
  "selectors": {
    "userBaseInfo": {
      "page": "/index.php",
      "fields": {
        "messageCount": {
          "selector": ["div.alertbar a[href*='inbox.php']"],
          "filters": ["query.text().replace(/\\s+/g,'').match(/(\\d+)/)", "(query && query.length>=2)?parseInt(query[1]):0"]
        },
        "id": {
          "selector": ["a.username[href*='user.php']:first"],
          "attribute": "href",
          "filters": ["query ? query.getQueryString('id'):''"]
        },
        "name": {
          "selector": ["a.username[href*='user.php']:first"]
        },
        "isLogged": {
          "selector": ["a[href*='logout.php']"],
          "filters": ["query.length>0"]
        }
      }
    },
    "userExtendInfo": {
      "page": "/user.php?id=$user.id$",
      "fields": {
        "uploaded": {
          "selector": "div:contains('Stats') + ul.stats > li:contains('Uploaded')",
          "filters": ["query.text().replace(/,/g,'').match(/Uploaded.+?([\\d.]+ ?[ZEPTGMK]?i?B)/)", "(query && query.length>=2)?(query[1]).sizeToNumber():0"]
        },
        "downloaded": {
          "selector": "div:contains('Stats') + ul.stats > li:contains('Downloaded')",
          "filters": ["query.text().replace(/,/g,'').match(/Downloaded.+?([\\d.]+ ?[ZEPTGMK]?i?B)/)", "(query && query.length>=2)?(query[1]).sizeToNumber():0"]
        },
        "ratio": {
          "selector": "div:contains('Stats') + ul.stats > li:contains('Ratio:')",
          "filters": ["query.text().replace(/,/g,'').match(/Ratio.+?([\\d.]+)/)", "(query && query.length>=2)?query[1]:0"]
        },
        "levelName": {
          "selector": "div:contains('Personal') + ul.stats > li:contains('Class:')",
          "filters": ["query.text().match(/Class:.+?(.+)/)", "(query && query.length>=2)?query[1]:''"]
        },
        "bonus": {
          "selector": ["div:contains('Stats') + ul.stats > li:contains('Bonus Points:')", "div:contains('Stats') + ul.stats > li:contains('SeedBonus:')"],
          "filters": ["query.text().replace(/,/g,'')", "query.match(/Bonus Points.+?([\\d.]+)/)||query.match(/SeedBonus.+?([\\d.]+)/)", "(query && query.length>=2)?query[1]:0"]
        },
        "joinTime": {
          "selector": ["div:contains('Stats') + ul.stats > li:contains('Joined:') > span"],
          "filters": ["query.attr('title')||query.text()", "dateTime(query).isValid()?dateTime(query).valueOf():query"]
        },
        "seeding": {
          "selector": ["div:contains('Community') + ul.stats > li:contains('Seeding:')"],
          "filters": [
            "query.text().replace(/,/g,'').match(/Seeding:.+?(\\d+).+?/)",
            "(query && query.length>=2)?(query[1]):0"
          ]
        },
        "seedingSize": {
          "selector": ["div:contains('Community') + ul.stats > li:contains('Seeding size:')"],
          "filters": [
            "query.text().replace(/,/g,'').match(/Seeding size:.+?([\\d.]+ ?[TGMK]?i?B)/)",
            "(query && query.length>=2)?(query[1]).sizeToNumber():0"
          ]
        }
      }
    }
  }
}